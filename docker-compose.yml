version: "3.8"
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend:latest
    container_name: backend-container
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://youruser:yourpassword@db:5432/yourdbname #TODO: change this
      FRONTEND_URL: http://localhost:3001
    env_file: .env.dev
    networks:
      - my-network
    volumes:
      - ./backend:/app
      - backend_static:/app/static
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    # restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend:latest
    container_name: frontend-container
    ports:
      - "3001:3001"
    environment:
      - VITE_BACKEND_URL=http://backend:8000
    env_file: .env.dev
    networks:
      - my-network
    volumes:
      - ./frontend:/usr/src/app
      - frontend_node_modules:/usr/src/app/node_modules
    # restart: unless-stopped

  db:
    image: postgres:latest
    container_name: db-container
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: dbname
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - my-network
    volumes:
      - db-data:/var/lib/postgresql/data
    # restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - my-network
    # restart: unless-stopped

  # prometheus:
  #     image: prometheus:latest
  #     container_name: prometheus
  #     build:
  #         context: ./prometheus
  #         dockerfile: Dockerfile
  #     volumes:
  #         - ./prometheus:/etc/prometheus
  #     ports:
  #         - "9090:9090"
  #     networks:
  #         - my-network
  # #        command:
  # #            - '--config.file=/etc/prometheus/prometheus.yml'
  # #            - '--storage.tsdb.path=/prometheus'
  # #            - '--web.console.libraries=/etc/prometheus/console_libraries'
  # #            - '--web.console.templates=/etc/prometheus/consoles'

  # grafana:
  #     image: awesome-grafana:latest
  #     container_name: grafana
  #     build:
  #         context: ./grafana
  #     ports:
  #         - "3000:3000"
  #     environment:
  #         GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/exported_dashboard_backend.json"
  #     volumes:
  #         - grafana_data:/var/lib/grafana
  #         - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
  #         - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  #     networks:
  #         - my-network

volumes:
  backend_static:
  frontend_node_modules:
  db-data:
  pgadmin_data:
  media_volume:
  # grafana_data:

networks:
  my-network:
    driver: bridge
