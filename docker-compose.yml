version: "3.8"
services:
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        image: backend:latest
        container_name: backend-container
        ports:
            - "8000:8000"
        environment:
            DATABASE_URL: postgresql://youruser:yourpassword@db:5432/yourdbname #TODO: change this
        env_file: .env
        networks:
            - my-network
        volumes:
            - ./backend:/app
            - backend_static:/app/static
            - media_volume:/app/media
        depends_on:
            - db
        # restart: unless-stopped

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        image: frontend:latest
        container_name: frontend-container
        ports:
            - "3001:3001"
        environment:
            - VITE_BACKEND_URL=http://backend:8000
        networks:
            - my-network
        volumes:
            - ./frontend:/usr/src/app
            - frontend_node_modules:/usr/src/app/node_modules
        # restart: unless-stopped

    db:
        image: postgres:latest
        container_name: db-container
        ports:
            - "5433:5432"
        environment:
            POSTGRES_DB: dbname
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
        networks:
            - my-network
        volumes:
            - db-data:/var/lib/postgresql/data
        # restart: unless-stopped

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin-container
        ports:
            - "5050:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@example.com #TODO: change this
            PGADMIN_DEFAULT_PASSWORD: root #TODO: change this
        networks:
            - my-network
        volumes:
            - pgadmin_data:/var/lib/pgadmin
        depends_on:
            - db
        # restart: unless-stopped

    redis:
        image: redis:latest
        container_name: redis-container
        ports:
            - "6379:6379"
        networks:
            - my-network
        # restart: unless-stopped

    prometheus:
        image: prometheus:latest
        container_name: prometheus
        build:
            context: ./prometheus
            dockerfile: Dockerfile
        volumes:
            - ./prometheus:/etc/prometheus
        ports:
            - "9090:9090"
        networks:
            - my-network
    #        command:
    #            - '--config.file=/etc/prometheus/prometheus.yml'
    #            - '--storage.tsdb.path=/prometheus'
    #            - '--web.console.libraries=/etc/prometheus/console_libraries'
    #            - '--web.console.templates=/etc/prometheus/consoles'

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - "3000:3000"
        volumes:
            - grafana_data:/var/lib/grafana
        networks:
            - my-network

volumes:
    backend_static:
    frontend_node_modules:
    db-data:
    pgadmin_data:
    media_volume:
    grafana_data:

networks:
    my-network:
        driver: bridge
